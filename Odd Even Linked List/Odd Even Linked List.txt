# Solution Roval T:O(N) S:O(1)
# 06-12-2022

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head:
            return None
        node = head
        odd = odd_end = node
        if not node.next:
            return node
        even = even_end = node.next
        node = node.next.next
        oddBool = True
        while node:
            if oddBool:
                odd_end.next = node
                odd_end = odd_end.next
            else:
                even_end.next = node
                even_end = even_end.next
            node = node.next
            oddBool= not oddBool
        odd_end.next = even
        even_end.next = None
        return odd