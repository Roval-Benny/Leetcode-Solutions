# Solution Roval T:O(N) S:O(N)
# 04-10-2022

class Solution:
    def addBinary(self, a: str, b: str) -> str:
        ans = ""
        rem = 0
        i = -1
        while abs(i)<=len(a) and abs(i)<=len(b):
            temp = rem + int(a[i]) + int(b[i])
            if temp==3:
                rem = 1
                ans+="1"
            elif temp==2:
                rem = 1
                ans+="0"
            elif temp==1:
                rem = 0
                ans+="1"
            else:
                rem = 0
                ans+="0"
            i-=1
        while abs(i)<=len(a):
            temp = rem + int(a[i])
            if temp==2:
                rem = 1
                ans+="0"
            elif temp==1:
                rem = 0
                ans+="1"
            else:
                rem = 0
                ans+="0"
            i-=1
        while abs(i)<=len(b):
            temp = rem + int(b[i])
            if temp==2:
                rem = 1
                ans+="0"
            elif temp==1:
                rem = 0
                ans+="1"
            else:
                rem = 0
                ans+="0"
            i-=1
        if rem!=0:
            ans+=str(rem)
        return ans[::-1]


# Solution Roval T:O(N) S:O(N)
# 19-08-2022

class Solution:
    def addBinary(self, a: str, b: str) -> str:
        ans = []
        rem = 0
        i = 0
        a = a[::-1]
        b = b[::-1]
        i = 0
        while i<len(a) and i<len(b):
            ta = int(a[i])
            tb = int(b[i])
            total = ta+tb+rem
            if total<2:
                ans.append(total)
                rem = 0
            elif total==2:
                ans.append("0")
                rem = 1
            else:
                ans.append("1")
                rem = 1
            i+=1
        while i<len(a):
            ta = int(a[i])
            total = ta+rem
            if total<2:
                ans.append(total)
                rem = 0
            elif total==2:
                ans.append("0")
                rem = 1
            else:
                ans.append("1")
                rem = 1
            i+=1
        while i<len(b):
            tb = int(b[i])
            total = tb+rem
            if total<2:
                ans.append(total)
                rem = 0
            elif total==2:
                ans.append("0")
                rem = 1
            else:
                ans.append("1")
                rem = 1
            i+=1
        ans.append(str(rem) if rem!=0 else '')
        return ''.join(map(str,ans[::-1]))
        


#T:O(N) S:O(1)
class Solution:
    def addBinary(self, a: str, b: str) -> str:
        return bin(int(a,2)+int(b,2))[2::]