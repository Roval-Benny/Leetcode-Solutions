#Solution Roval T:O(M+N) S:O(1) Most optimal
# 03-08-2022
class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:  
        l = 0
        r = len(matrix[0])-1
        while l<len(matrix) and r>=0:
            if matrix[l][r] == target:
                return True
            elif matrix[l][r]<target:
                l+=1
            else:
                r-=1
        return False

# Solution Roval T:O(MlogN) S:O(1)
# 03-08-2022
class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        
        def binarySearch(l,r,target,arr):
            while l<=r:
                mid = (l+r)//2
                if mid>=len(i):
                    return False
                if arr[mid]==target:
                    return True
                elif arr[mid]<target:
                    l = mid+1
                else:
                    r = mid-1
            return False
        
        for i in matrix:
            if binarySearch(0,len(matrix[0]),target,i):
                return True
        return False