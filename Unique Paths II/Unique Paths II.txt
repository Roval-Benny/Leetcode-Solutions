# T:O(N*M) S:O(N*M)
class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:
        arr = [[0 for _ in range(len(obstacleGrid[0]))] for j in range(len(obstacleGrid))]
        arr[0][0] = 1 if obstacleGrid[0][0]!=1 else 0
        for i in range(1,len(obstacleGrid)):
            if obstacleGrid[i][0]!=1:
                arr[i][0]=arr[i-1][0]
        for i in range(1,len(obstacleGrid[0])):
            if obstacleGrid[0][i]!=1:
                arr[0][i]=arr[0][i-1]
        for i in range(1,len(obstacleGrid)):
            for j in range(1,len(obstacleGrid[0])):
                if obstacleGrid[i][j]!=1:
                    arr[i][j] = arr[i-1][j]+arr[i][j-1]
        return arr[-1][-1]