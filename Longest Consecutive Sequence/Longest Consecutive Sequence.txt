#Solution 1 using only one set T:O(N) S:O(N)
class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        if not nums:
            return 0
        values = set()
        for num in nums:
            values.add(num)
        max_count = 1
        for i in values:
            if i-1 in values:
                continue
            i+=1
            count=1
            while(i in values):
                count+=1
                i+=1
            max_count = max(max_count,count)
        return max_count



#Solution 2 using two sets T:O(N) S:O(N)
class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        if not nums:
            return 0
        values = set()
        for num in nums:
            values.add(num)
        result = set()
        max_count = 1
        for i in values:
            if i not in result:
                result.add(i)
                count = 1
                temp = i-1
                while(temp in values):
                    result.add(temp)
                    count+=1
                    temp-=1
                i+=1
                while(i in values):
                    result.add(i)
                    count+=1
                    i+=1
                max_count = max(max_count,count)
        return max_count