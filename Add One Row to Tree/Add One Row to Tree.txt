# Solution Roval T:O(N) S:O(D)
# 05-10-2022

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def addOneRow(self, root: Optional[TreeNode], val: int, depth: int) -> Optional[TreeNode]:
        if depth == 1:
            node = TreeNode(val)
            node.left = root
            return node
        q = [root]
        curr = 1
        while q and curr!=depth-1:
            temp = []
            while q:
                node = q.pop(-1)
                if node.left:
                    temp.append(node.left)
                if node.right:
                    temp.append(node.right)
            q = temp
            curr+=1
        while q:
            node = q.pop(-1)
            new1 = TreeNode(val)
            new2 = TreeNode(val)
            left = node.left
            right = node.right
            new1.left = left
            new2.right = right
            node.left = new1
            node.right = new2
        return root