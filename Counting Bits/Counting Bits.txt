# Solution 1 T:O(N) S:(N) - Roval
class Solution:
    def countBits(self, n: int) -> List[int]:
        if n==0:
            return [0]
        if n==1:
            return [0,1]
        ans = [0,1]
        pos = 1
        while True: 
            pos*=2
            j = 0
            while j<pos:
                ans.append(ans[j]+1)
                j+=1
                if len(ans)==(n+1):
                    return ans

# More optimized code on internet
class Solution:
    def countBits(self, n: int) -> List[int]:
        memo = [0] * (n + 1)
        
        for i in range(1, n + 1):
            memo[i] = memo[i >> 1] + i % 2
            
        return memo