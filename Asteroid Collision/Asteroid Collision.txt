# Solution 1 Faster 
# T:O(N) S:O(N)

class Solution:
    def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        stack = []
        for i in asteroids:
            if i>0:
                stack.append(i)
            else:
                if stack and abs(i)<stack[-1]:
                    continue
                while stack and stack[-1]>0 and stack[-1]<abs(i):
                    stack.pop(-1)
                if stack and stack[-1]==abs(i):
                    stack.pop(-1)
                elif stack and stack[-1]>0:
                    continue
                else:
                    stack.append(i)
        return stack

# Solution 2
class Solution:
    def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        stack = []
        stack.append(asteroids[0])
        for i in range(1,len(asteroids)):
            temp=None
            if asteroids[i]<0:
                while stack and stack[-1]>0 and stack[-1]<abs(asteroids[i]):
                    temp=stack.pop(-1)
                if stack:
                    if stack[-1]==abs(asteroids[i]):
                        temp=stack.pop(-1)
                    elif stack[-1]<0 and asteroids[i]<0:
                        stack.append(asteroids[i])
                    elif temp==abs(stack[-1]):
                        stack.pop(-1)
                else:
                    stack.append(asteroids[i])
            else:
                stack.append(asteroids[i])
        return stack