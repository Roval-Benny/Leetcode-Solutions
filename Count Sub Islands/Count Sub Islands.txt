# Solution Roval T:O(N*M) S:O(N*M)
# 27-09-2022

class Solution:
    def countSubIslands(self, grid1: List[List[int]], grid2: List[List[int]]) -> int:
        islands = []
        def dfs(r,c):
            if r<0 or c<0 or r==len(grid2) or c==len(grid2[0]) or grid2[r][c] == 0:
                return 
            islands[-1].append((r,c))
            grid2[r][c] = 0
            dfs(r-1,c)
            dfs(r+1,c)
            dfs(r,c-1)
            dfs(r,c+1)
            return
        
        for r in range(len(grid2)):
            for c in range(len(grid2[0])):
                if grid2[r][c]==1:
                    islands.append([])
                    dfs(r,c)
        count = 0
        for island in islands:
            flag = True
            for r,c in island:
                if grid1[r][c]!=1:
                    flag = False
                    break
            count+=(int(flag))
        return count