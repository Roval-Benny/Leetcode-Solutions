# Solution Roval T:O(N) S:O(1)
# 13-09-2022
class Solution:
    def canJump(self, nums: List[int]) -> bool:
        pos = nums[0]
        if pos==0 and len(nums)>1:
            return False
        for i in range(1,len(nums)):
            pos = max(pos,i+nums[i])
            if pos>=len(nums)-1:
                return True
            if pos==i:
                return False
        return pos>=len(nums)-1

# Solution Roval T:O(N) S:O(N)
# 13-09-2022
class Solution:
    def canJump(self, nums: List[int]) -> bool:
        dp = [0]*(len(nums)+1)
        dp[0] = nums[0]
        if dp[0]==0 and len(nums)>1:
            return False
        for i in range(1,len(nums)):
            dp[i] = max(dp[i-1],i+nums[i])
            if dp[i]>=len(nums)-1:
                return True
            if dp[i]==i:
                return False
        return dp[-1]>=len(nums)-1