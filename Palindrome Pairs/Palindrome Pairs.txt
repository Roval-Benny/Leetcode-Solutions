# Solution Roval T:O(N*L*L) S:O(N)
# 17-09-2022

class Solution:
    def palindromePairs(self, words: List[str]) -> List[List[int]]:
        lookup = {}
        for index,val in enumerate(words):
            lookup[val] = index
        ans = set()
        def ispalindrome(word):
            for i in range(len(word)//2+1):
                if word[i]!=word[-i-1]:
                    return False
            return True
        for index,word in enumerate(words):
            for j in range(len(word)+1):
                temp = word[:j][::-1]
                if temp in lookup and lookup[temp]!=index and ispalindrome(word+temp):
                    ans.add((index,lookup[temp]))
                temp = word[::-1][:j]
                if temp in lookup and lookup[temp]!=index and ispalindrome(temp+word):
                    ans.add((lookup[temp],index))
        return ans