# Solution 1 T:O(4^N) S:O(4^N) - Roval

class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        if len(digits)==0:
            return []
        chars = {"2":"abc","3":"def","4":"ghi","5":"jkl","6":"mno","7":"pqrs","8":"tuv","9":"wxyz"}
        
        answer = []
        def generator(string,pos):
            if pos==len(digits):
                answer.append(string)
                return
            
            for i in chars[digits[pos]]:
                generator(string+i,pos+1)
                
        generator('',0)
        return answer

#Solution 2 T:O(4^N) S:O(4^N)
class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        if len(digits)==0:
            return ''
        keys = {'2':['a','b','c'],'3':['d','e','f'],'4':['g','h','i'],'5':['j','k','l'],'6':['m','n','o'],'7':['p','q','r','s'],'8':['t','u','v'],'9':['w','x','y','z']}
        
        def generator(digit,answer):
            temp = []
            for i in answer:
                for j in keys[digit]:
                    temp.append(i+j)
            return temp
        
        
        answer = keys[digits[0]]
        for i in digits[1::]:
            temp = []
            answer = generator(i,answer)
        return answer