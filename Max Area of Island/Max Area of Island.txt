# Solution Roval T:O(NM) S:O(NM)
# 23-09-2022

class Solution:
    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:
        size = 0
        def dfs(i,j):
            if 0<=i<len(grid) and 0<=j<len(grid[0]) and grid[i][j]==1:
                grid[i][j] = 2
                return 1 + dfs(i-1,j) + dfs(i,j-1) + dfs(i+1,j) + dfs(i,j+1)
            return 0
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j]==1:
                    size = max(size,dfs(i,j))
        return size

# Solution Roval T:O(N*M) S:O(N*M)
# 10-08-2022
class Solution:
    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:
        ans = 0
        def checker(row,col):
            if row<0 or row>=len(grid) or col<0 or col>=len(grid[0])  or grid[row][col]!=1:
                return 0
            grid[row][col] = 2 
            return checker(row,col+1) + checker(row,col-1) + checker(row+1,col) + checker(row-1,col) + 1
        for row in range(len(grid)):
            for col in range(len(grid[0])):
                if grid[row][col] == 1:
                    ans = max(ans,checker(row,col))
        return ans