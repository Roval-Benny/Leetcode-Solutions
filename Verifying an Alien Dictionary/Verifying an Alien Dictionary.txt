
# Solution Roval T:O(MN) S:O(1)
# 18-08-2022
class Solution:
    def isAlienSorted(self, words: List[str], order: str) -> bool:
        values = dict((val,index) for index,val in enumerate(order))
        if len(words)==1:
            return True
        pos = 1
        while pos<len(words):
            word1,word2 = words[pos-1],words[pos]
            index = 0
            while index<len(word1) and index<len(word2):
                if values[word1[index]] > values[word2[index]]:
                    return False
                elif values[word1[index]] == values[word2[index]]:
                    index+=1
                else:
                    break
            if index<len(word1) and index>=len(word2):
                return False
            pos+=1
        return True



# Solution Roval T:O(MN) S:O(1) 
# 13-7-2022
class Solution:
    def isAlienSorted(self, words: List[str], order: str) -> bool:
        orderD = dict((val,index) for index,val in enumerate(order))
        if len(words)==1:
            return True
        i = 1
        while i<len(words):
            word1, word2 = words[i-1],words[i]
            index = 0
            while index<len(word1) and index<len(word2):
                if orderD[word1[index]] == orderD[word2[index]]:
                    index+=1
                elif orderD[word1[index]] > orderD[word2[index]]:
                    return False
                else:
                    break
            if (index>=len(word1) or index>=len(word2)) and (len(word1)>len(word2)):
                return False
            i+=1
        return True