# Time:O(N**2) S:O(N)
# Most optimized
class Solution:
    # your task is to complete this function
    # function sort the stack such that top element is max
    # funciton should return nothing
    # s is a stack
    def sorted(self, s):
        # Code here
        temp = []
        
        while(s):
            val = s.pop(-1)
            if not temp or temp[-1]>=val:
                temp.append(val)
            else:
                while(temp and temp[-1]<val):
                    s.append(temp.pop(-1))
                temp.append(val)
        while(temp):
            s.append(temp.pop(-1))