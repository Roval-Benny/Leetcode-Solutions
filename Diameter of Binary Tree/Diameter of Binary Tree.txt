# T:O(N) S:O(D) D - depth

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def __init__(self):
        self.length = 0
        
    def lengthCal(self,node):
        if not node:
            return -1
        a = self.lengthCal(node.left)+1
        b = self.lengthCal(node.right)+1
        self.length = max(self.length,a+b)
        return max(a,b)
    
    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:
        self.lengthCal(root)
        return self.length