# Dynamic Programming T:O(N**2) S:O(N)
class Solution:
    def cutRod(self, price, n):
        #code here
        r = [-1]*(n+1)
        r[0] = 0
        for i in range(1,n+1):
            q = -1
            for j in range(1,i+1):
                q = max(q,price[j-1]+r[i-j])
            r[i] = q
        return r[n]