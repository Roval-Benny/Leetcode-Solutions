# Solution Roval T:O(N) S:O(K)
# 31-08-2022

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseKGroup(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        stack = []
        nhead = tail = None
        node = head
        while node:
            while node and len(stack)<k:
                stack.append(node)
                node = node.next
            if len(stack)==k:
                while stack:
                    if not nhead:
                        nhead = stack.pop(-1)
                        tail = nhead
                    else:
                        tail.next = stack.pop(-1)
                        tail = tail.next
                tail.next = None
            else:
                tail.next = stack[0]
        return nhead