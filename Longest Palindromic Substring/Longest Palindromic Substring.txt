# T:O(N**2) S:O(N)
class Solution:
    def longestPalindrome(self, s: str) -> str:
        string = ""
        stringLen = 0
        for i in range(len(s)):
            # For odd length
            l,r = i, i
            while l>=0 and r < len(s) and s[l]==s[r]:
                if (r - l +1)>stringLen:
                    string = s[l:r+1]
                    stringLen = (r-l+1)
                l-=1
                r+=1
            # For even length
            l,r = i, i+1
            while l>=0 and r < len(s) and s[l]==s[r]:
                if (r - l +1)>stringLen:
                    string = s[l:r+1]
                    stringLen = (r-l+1)
                l-=1
                r+=1
        return string